

abstractConnectionHandler.connectionsGet=为套接字[{1}]找到一个处理器[{0}]
abstractConnectionHandler.ioexception.debug=正常的 IOException，忽略
abstractConnectionHandler.processorCreate=创建新处理器[{0}]
abstractConnectionHandler.processorPop=从缓存中弹出的处理器[{0}]
abstractConnectionHandler.socketexception.debug=(:SocketException是正常的，忽略
abstractConnectionHandler.upgradeCreate=为套接字包装程序[{1}]创建了升级处理器[{0}]

abstractProcessor.fallToDebug=注意：更多的请求解析错误将以DEBUG级别日志进行记录。
abstractProcessor.hostInvalid=[{0}] 是无效主机
abstractProcessor.httpupgrade.notsupported=此协议不支持HTTP升级（upgrade）。
abstractProcessor.socket.ssl=获取SSL属性异常

abstractProtocol.processorRegisterError=注册请求处理器错误
abstractProtocol.processorUnregisterError=注销请求处理器错误
abstractProtocol.waitingProcessor.add=添加处理器[{0}]到等待队列
abstractProtocol.waitingProcessor.remove=从等待的处理器中移除处理器[{0}]

abstractProtocolHandler.destroy=正在摧毁协议处理器 [{0}]
abstractProtocolHandler.init=初始化协议处理器 [{0}]
abstractProtocolHandler.start=开始协议处理句柄[{0}]
abstractProtocolHandler.stop=正在停止ProtocolHandler [{0}]

asyncStateMachine.invalidAsyncState=调用[{0}]对于具有异步状态[{1}]的请求无效

compressionConfig.ContentEncodingParseFail=检查压缩是否已经在使用时，解析Content-Encoding头失败

response.notNonBlocking=当响应尚未进入非阻塞模式时，调用 isReady() 无效
response.writeListenerSet=非阻塞的写监听已经被设置.
